{"version":3,"sources":["../../../src/components/WebChat.tsx"],"names":["className","React","constructor","memoize","styleOptions","console","window","render","props","config","webChatOptions","state","ReactWebChat","webChatProps","userID","username","directLine","store","styleSet","activityMiddleware","k"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAce,QAAA,MAAA,SAAcC,gBAAd,SAAA,CAA0D;AAIrEC,IAAAA,WAAW,CAAA,KAAA,EAAgC;AACvC,YAAA,KAAA;AAEA,WAAA,cAAA,GAAsBC,0BAASC,YAAD,IAAqD;AAC/EC,QAAAA,OAAO,CAAPA,GAAAA,CAAAA,gBAAAA;AAEA,eAAOC,MAAM,CAANA,OAAAA,CAAAA,cAAAA,CAAP,YAAOA,CAAP;AAHJ,OAAsBH,CAAtB;AAMH;;AAEDI,IAAAA,MAAM,GAAG;AACL,YAAM;AACFC,QAAAA,KAAK,EAAE;AAAA,UAAA,SAAA;AAAA,UAAA,UAAA;AACHC,UAAAA,MAAM,EAAE;AAAA,YAAA,MAAA;AAAA,YAAA,QAAA;AACJC,YAAAA,cAAc,EAAE;AAAA,cAAA,KAAA;AAASN,cAAAA;AAAT;AADZ;AADL,SADL;AAMFO,QAAAA,KAAK,EAAE;AANL,UAAN,IAAA;AASA;;;;;;;;;;;AAYA;;AACA,UAAI;AAAEC,QAAAA;AAAF,UAAmBN,MAAM,CAA7B,OAAA;;AACA,UAAI,CAAJ,YAAA,EAAmB;AACf;AACAM,QAAAA,YAAY,GAAZA,6BAAAA;AACH;;AAGD,UAAIC,YAAiB,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACd,KAAA,KAAA,CADc,MAAA,CAAA,EAAA,EAAA,EAAA;AAEjBC,QAAAA,MAAM,EAFW,MAAA;AAGjBC,QAAAA,QAAQ,EAHS,QAAA;AAIjBf,QAAAA,SAAS,EAAG,GAAEA,SAAS,IAAI,EAJV,WAAA;AAKjBgB,QAAAA,UAAU,EALO,UAAA;AAMjBC,QAAAA,KAAK,EANY,KAAA;AAOjBC,QAAAA,QAAQ,EAAE,KAAA,cAAA,CAPO,YAOP,CAPO;AAQjBC,QAAAA,kBAAkB,EAAE,KAAKA;AARR,OAAA,CAArB;;AAWA,OAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,gBAAA,EAAA,OAAA,CACaC,CAAC,IAAI,OAAOP,YAAY,CADrC,CACqC,CADrC;AAGA,aACIG,UAAU,GAAA,aACNf,gBAAAA,aAAAA,CAAAA,YAAAA,EADM,YACNA,CADM,GAAA,aAGN,gBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAG,GAAED,SAAS,IAAI,EAAG;AAAnC,OAAA,EAAA,aACI,gBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAAA,aACI,gBAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAAA,aACI,gBAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAC;AAAhB,OAAA,CADJ,CADJ,EAAA,aAII,gBAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAThB,kDASgB,CAJJ,CADJ,CAJR;AAaH;;AAxEoE;;oBAA1D,M;;;AARXA,IAAAA,S","sourcesContent":["import memoize from 'memoize-one';\nimport React from 'react';\nimport ReactWebChat_Package from 'botframework-webchat'\nimport '../styles/WebChat.css';\n\ninterface WebChatProps {\n    className?: string,\n    config: GSSWebChat.IWebChatConfig,\n    directLine: BotFrameworkWebChat.IDirectLine\n}\n\ninterface WebChatState {\n}\n\nexport default class extends React.Component<WebChatProps, WebChatState> {\n    createStyleSet: (styleOptions: BotFrameworkWebChat.IStyleOptions) => any;\n    activityMiddleware: any;\n\n    constructor(props: Readonly<WebChatProps>) {\n        super(props);\n\n        this.createStyleSet = memoize((styleOptions: BotFrameworkWebChat.IStyleOptions) => {\n            console.log('createStyleSet');\n\n            return window.WebChat.createStyleSet(styleOptions);\n        });\n\n    }\n\n    render() {\n        const {\n            props: { className, directLine,\n                config: { userId, userName,\n                    webChatOptions: { store, styleOptions }\n                }\n            },\n            state: { }\n        } = this;\n\n        /**\n         * 引入 ReactWebChat 有分兩種狀況：\n         * \n         * 1. 使用 webpack build 出來的 gss-webchat.js：\n         *    如果是使用 gss-webchat.js 需要在 html 中引入 botframework webchat-es5.js 的 cdn\n         *    所以 ReactWebChat 會從 window 中拿取\n         * \n         * 2. 使用 rollup.js build 出可以在其他 react 專案中以 component 引入的 gss-webchat-component.js：\n         *    使用 gss-webchat-component.js 則是需要 user 在自己的專案中安裝 botframework-webchat 的 npm 套件\n         *    所以 ReactWebChat 會從 package 中拿取\n         */\n\n        // 1. 使用 webpack build 出來的 gss-webchat.js\n        let { ReactWebChat } = window.WebChat;\n        if (!ReactWebChat) {\n            // 2. 使用 rollup.js build 出可以在其他 react 專案中以 component 引入的 gss-webchat-component.js\n            ReactWebChat = ReactWebChat_Package\n        }\n\n\n        let webChatProps: any = {\n            ...this.props.config,\n            userID: userId,\n            username: userName,\n            className: `${className || ''} web-chat`,\n            directLine: directLine,\n            store: store,\n            styleSet: this.createStyleSet(styleOptions),\n            activityMiddleware: this.activityMiddleware\n        };\n\n        ['botId', 'botName', 'userId', 'userName', 'directLineOptions', 'webChatOptions']\n            .forEach(k => delete webChatProps[k])\n\n        return (\n            directLine ?\n                React.createElement(ReactWebChat, webChatProps)\n                :\n                <div className={`${className || ''} connect-spinner`}>\n                    <div className=\"content\">\n                        <div className=\"icon\">\n                            <span className=\"ms-Icon ms-Icon--Robot\" />\n                        </div>\n                        <p>連線中，請稍等。</p>\n                    </div>\n                </div>\n        );\n    }\n}"],"file":"WebChat.js"}