{"version":3,"sources":["../../../src/utils/DirectLine.ts"],"names":["directLine","createDirectLine","directLineOptions","BotFrameworkWebChat_createDirectLine","url","res","fetch","method","body","userId","Configuration","headers","token","console","getDirectLine","endDirectLine","getWatermark","addCurrentUser","next","config","from","id","name","userName","membersAdded","type","error","err","complete","removeCurrentUser","membersRemoved","addMembers","removeMembers"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAIA,UAA2C,GAA/C,IAAA;;AAEA,QAAMC,gBAAgB,GAAG,MAAA,iBAAA,IAAsG;AAC3H,QAAIC,iBAAiB,CAArB,KAAA,EAA6B;AACzBF,MAAAA,UAAU,GAAGG,2CAAbH,iBAAaG,CAAbH;AADJ,KAAA,MAGK;AACD;AACA,YAAMI,GAAG,GAAGF,iBAAiB,CAAjBA,MAAAA,GAAAA,mBAAAA,GAAiDA,iBAAiB,CAA9E,cAAA;AACA,YAAMG,GAAG,GAAG,MAAMC,KAAK,CAAA,GAAA,EAAM;AACzBC,QAAAA,MAAM,EADmB,MAAA;AAEzBC,QAAAA,IAAI,EAAE,IAAI,CAAJ,SAAA,CAAe;AAAEC,UAAAA,MAAM,EAAEC,wBAAAA,GAAAA,GAAoBD;AAA9B,SAAf,CAFmB;AAGzBE,QAAAA,OAAO,EAAE,IAAA,OAAA,CAAY;AACjB,0BAAgB;AADC,SAAZ;AAHgB,OAAN,CAAvB;AAOA,YAAM;AAAEC,QAAAA;AAAF,UAAY,MAAMP,GAAG,CAA3B,IAAwBA,EAAxB;AAEAL,MAAAA,UAAU,GAAGG,2CAAoC,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA;AAAyBS,QAAAA;AAAzB,OAAA,CAApCT,CAAbH;AACH;;AAEDa,IAAAA,OAAO,CAAPA,GAAAA,CAAY,qBAAqBb,UAAU,CAA3Ca,cAAAA;AACAA,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,kBAAAA;AAEA,WAAA,UAAA;AAtBJ,GAAA;;AAyBA,QAAMC,aAAa,GAAG,MAAtB,UAAA;;AAEA,QAAMC,aAAa,GAAG,MAAM;AACxBf,IAAAA,UAAU,IAAIA,UAAU,CAAxBA,GAAcA,EAAdA;AACAA,IAAAA,UAAU,GAAVA,IAAAA;AAFJ,GAAA;;AAKA,QAAMgB,YAAY,GAAG,MAAMhB,UAAU,IAAIA,UAAU,CAAxBA,SAAAA,IAA3B,CAAA;AAEA;AACA;;;AAEA,QAAMiB,cAAc,GAAIC,IAAD,IAAoB;AACvC,UAAMC,MAAM,GAAGT,wBAAf,GAAeA,EAAf;;AAEAV,IAAAA,UAAU,IAAI,UAAU,CAAV,YAAA,CAAwB;AAClCoB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAEF,MAAM,CAAZ,MAAA;AAAqBG,QAAAA,IAAI,EAAEH,MAAM,CAACI;AAAlC,OAD4B;AAElCC,MAAAA,YAAY,EAAE,CAAC;AAAEH,QAAAA,EAAE,EAAEF,MAAM,CAACV;AAAb,OAAD,CAFoB;AAGlCgB,MAAAA,IAAI,EAAE;AAH4B,KAAxB,EAAA,SAAA,CAID;AACTP,MAAAA,IAAI,EAAGG,EAAD,IAAaH,IAAI,IAAIA,IAAI,CADtB,EACsB,CADtB;AAETQ,MAAAA,KAAK,EAAGC,GAAD,IAAcd,OAAO,CAAPA,GAAAA,CAAa,0BAAyBc,GAFlD,EAEYd,CAFZ;AAGTe,MAAAA,QAAQ,EAAE,MAAMf,OAAO,CAAPA,GAAAA,CAAAA,0BAAAA;AAHP,KAJC,CAAdb;AAHJ,GAAA;;AAcA,QAAM6B,iBAAiB,GAAIX,IAAD,IAAoB;AAC1C,UAAMC,MAAM,GAAGT,wBAAf,GAAeA,EAAf;;AAEAV,IAAAA,UAAU,IAAI,UAAU,CAAV,YAAA,CAAwB;AAClCoB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAEF,MAAM,CAAZ,MAAA;AAAqBG,QAAAA,IAAI,EAAEH,MAAM,CAACI;AAAlC,OAD4B;AAElCO,MAAAA,cAAc,EAAE,CAAC;AAAET,QAAAA,EAAE,EAAEF,MAAM,CAACV;AAAb,OAAD,CAFkB;AAGlCgB,MAAAA,IAAI,EAAE;AAH4B,KAAxB,EAAA,SAAA,CAID;AACTP,MAAAA,IAAI,EAAGG,EAAD,IAAaH,IAAI,IAAIA,IAAI,CADtB,EACsB,CADtB;AAETQ,MAAAA,KAAK,EAAGC,GAAD,IAAcd,OAAO,CAAPA,GAAAA,CAAa,yBAAwBc,GAFjD,EAEYd,CAFZ;AAGTe,MAAAA,QAAQ,EAAE,MAAMf,OAAO,CAAPA,GAAAA,CAAAA,yBAAAA;AAHP,KAJC,CAAdb;AAHJ,GAAA;;AAcA,QAAM+B,UAAU,GAAG,CAAA,OAAA,EAAA,IAAA,KAAwD;AACvE,UAAMZ,MAAM,GAAGT,wBAAf,GAAeA,EAAf;;AAEAV,IAAAA,UAAU,IAAI,UAAU,CAAV,YAAA,CAAwB;AAClCoB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAEF,MAAM,CAAZ,MAAA;AAAqBG,QAAAA,IAAI,EAAEH,MAAM,CAACI;AAAlC,OAD4B;AAElCC,MAAAA,YAAY,EAFsB,OAAA;AAGlCC,MAAAA,IAAI,EAAE;AAH4B,KAAxB,EAAA,SAAA,CAID;AACTP,MAAAA,IAAI,EAAGG,EAAD,IAAaH,IAAI,IAAIA,IAAI,CADtB,EACsB,CADtB;AAETQ,MAAAA,KAAK,EAAGC,GAAD,IAAcd,OAAO,CAAPA,GAAAA,CAAa,sBAAqBc,GAF9C,EAEYd,CAFZ;AAGTe,MAAAA,QAAQ,EAAE,MAAMf,OAAO,CAAPA,GAAAA,CAAAA,sBAAAA;AAHP,KAJC,CAAdb;AAHJ,GAAA;;AAcA,QAAMgC,aAAa,GAAG,CAAA,OAAA,EAAA,IAAA,KAAwD;AAC1E,UAAMb,MAAM,GAAGT,wBAAf,GAAeA,EAAf;;AAEAV,IAAAA,UAAU,IAAI,UAAU,CAAV,YAAA,CAAwB;AAClCoB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAEF,MAAM,CAAZ,MAAA;AAAqBG,QAAAA,IAAI,EAAEH,MAAM,CAACI;AAAlC,OAD4B;AAElCO,MAAAA,cAAc,EAFoB,OAAA;AAGlCL,MAAAA,IAAI,EAAE;AAH4B,KAAxB,EAAA,SAAA,CAID;AACTP,MAAAA,IAAI,EAAGG,EAAD,IAAaH,IAAI,IAAIA,IAAI,CADtB,EACsB,CADtB;AAETQ,MAAAA,KAAK,EAAGC,GAAD,IAAcd,OAAO,CAAPA,GAAAA,CAAa,yBAAwBc,GAFjD,EAEYd,CAFZ;AAGTe,MAAAA,QAAQ,EAAE,MAAMf,OAAO,CAAPA,GAAAA,CAAAA,yBAAAA;AAHP,KAJC,CAAdb;AAHJ,GAAA;;oBAce;AAAA,IAAA,YAAA;AAAA,IAAA,UAAA;AAAA,IAAA,aAAA;AAAA,IAAA,cAAA;AAKX6B,IAAAA;AALW,G;UAQf,gB,GAAA,gB;UAAA,a,GAAA,a;UAAA,a,GAAA,a","sourcesContent":["import Configuration from \"./Configuration\"\nimport { createDirectLine as BotFrameworkWebChat_createDirectLine } from 'botframework-webchat'\nlet directLine: BotFrameworkWebChat.IDirectLine = null\n\nconst createDirectLine = async (directLineOptions: GSSWebChat.IDirectLineOptions): Promise<BotFrameworkWebChat.IDirectLine> => {\n    if (directLineOptions.token) {\n        directLine = BotFrameworkWebChat_createDirectLine(directLineOptions)\n    }\n    else {\n        //fetchToken\n        const url = directLineOptions.domain + '/tokens/generate/' + directLineOptions.conversationId\n        const res = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({ userId: Configuration.get().userId }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        const { token } = await res.json()\n\n        directLine = BotFrameworkWebChat_createDirectLine({ ...directLineOptions, token })\n    }\n\n    console.log('conversationId: ' + directLine.conversationId)\n    console.log('createDirectLine')\n\n    return directLine\n}\n\nconst getDirectLine = () => directLine\n\nconst endDirectLine = () => {\n    directLine && directLine.end()\n    directLine = null\n}\n\nconst getWatermark = () => directLine && directLine.watermark || 0\n\n/* post activity */\n//Activity types: https://docs.microsoft.com/zh-tw/azure/bot-service/dotnet/bot-builder-dotnet-activities?view=azure-bot-service-3.0\n\nconst addCurrentUser = (next: Function) => {\n    const config = Configuration.get()\n\n    directLine && directLine.postActivity({\n        from: { id: config.userId, name: config.userName },\n        membersAdded: [{ id: config.userId }],\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...addCurrentUser: ${err}`),\n        complete: () => console.log('addCurrentUser complete.')\n    })\n}\n\nconst removeCurrentUser = (next: Function) => {\n    const config = Configuration.get()\n\n    directLine && directLine.postActivity({\n        from: { id: config.userId, name: config.userName },\n        membersRemoved: [{ id: config.userId }],\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...removeMembers: ${err}`),\n        complete: () => console.log('removeMembers complete.')\n    })\n}\n\nconst addMembers = (members: Array<GSSWebChat.IMember>, next: Function) => {\n    const config = Configuration.get()\n\n    directLine && directLine.postActivity({\n        from: { id: config.userId, name: config.userName },\n        membersAdded: members,\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...addMembers: ${err}`),\n        complete: () => console.log('addMembers complete.')\n    })\n}\n\nconst removeMembers = (members: Array<GSSWebChat.IMember>, next: Function) => {\n    const config = Configuration.get()\n\n    directLine && directLine.postActivity({\n        from: { id: config.userId, name: config.userName },\n        membersRemoved: members,\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...removeMembers: ${err}`),\n        complete: () => console.log('removeMembers complete.')\n    })\n}\n\nexport default {\n    getWatermark,\n    addMembers,\n    removeMembers,\n    addCurrentUser,\n    removeCurrentUser\n}\n\nexport {\n    createDirectLine,\n    getDirectLine,\n    endDirectLine\n}"],"file":"DirectLine.js"}