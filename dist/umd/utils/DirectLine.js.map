{"version":3,"sources":["../../../src/utils/DirectLine.ts"],"names":["directLine","createDirectLine","directLineOptions","window","url","res","fetch","method","body","userId","Configuration","headers","token","console","getDirectLine","endDirectLine","getWatermark","addCurrentUser","next","currentUserId","from","id","membersAdded","type","error","err","complete","removeCurrentUser","membersRemoved","addMembers","removeMembers"],"mappings":"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","sourcesContent":["import Configuration from \"./Configuration\"\n\nlet directLine: BotFrameworkWebChat.IDirectLine = null\n\nconst createDirectLine = async (directLineOptions: GSSWebChat.IDirectLineOptions): Promise<BotFrameworkWebChat.IDirectLine> => {\n    if (directLineOptions.token) {\n        directLine = window.WebChat.createDirectLine(directLineOptions)\n    }\n    else {\n        //fetchToken\n        const url = directLineOptions.domain + '/tokens/generate/' + directLineOptions.conversationId\n        const res = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({ userId: Configuration.get().userId }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        const { token } = await res.json()\n\n        directLine = window.WebChat.createDirectLine({ ...directLineOptions, token })\n    }\n\n    console.log('conversationId: ' + directLine.conversationId)\n    console.log('createDirectLine')\n\n    return directLine\n}\n\n\nconst getDirectLine = () => directLine\n\nconst endDirectLine = () => {\n    directLine && directLine.end()\n    directLine = null\n}\n\nconst getWatermark = () => directLine && directLine.watermark || 0\n\n/* post activity */\n//Activity types: https://docs.microsoft.com/zh-tw/azure/bot-service/dotnet/bot-builder-dotnet-activities?view=azure-bot-service-3.0\n\nconst addCurrentUser = (next: Function) => {\n    const currentUserId = Configuration.get().userId\n\n    directLine && directLine.postActivity({\n        from: { id: currentUserId },\n        membersAdded: [{ id: currentUserId }],\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...addCurrentUser: ${err}`),\n        complete: () => console.log('addCurrentUser complete.')\n    })\n}\n\nconst removeCurrentUser = (next: Function) => {\n    const currentUserId = Configuration.get().userId\n\n    directLine && directLine.postActivity({\n        from: { id: currentUserId },\n        membersRemoved: [{ id: currentUserId }],\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...removeMembers: ${err}`),\n        complete: () => console.log('removeMembers complete.')\n    })\n}\n\nconst addMembers = (members: Array<GSSWebChat.IMember>, next: Function) => {\n    directLine && directLine.postActivity({\n        from: { id: Configuration.get().userId },\n        membersAdded: members,\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...addMembers: ${err}`),\n        complete: () => console.log('addMembers complete.')\n    })\n}\n\nconst removeMembers = (members: Array<GSSWebChat.IMember>, next: Function) => {\n    directLine && directLine.postActivity({\n        from: { id: Configuration.get().userId },\n        membersRemoved: members,\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...removeMembers: ${err}`),\n        complete: () => console.log('removeMembers complete.')\n    })\n}\n\nexport default {\n    getWatermark,\n    addMembers,\n    removeMembers,\n    addCurrentUser,\n    removeCurrentUser,\n    createDirectLine\n}\n\nexport {\n    createDirectLine,\n    getDirectLine,\n    endDirectLine\n}"],"file":"DirectLine.js"}