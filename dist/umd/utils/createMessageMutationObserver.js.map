{"version":3,"sources":["../../../src/utils/createMessageMutationObserver.ts"],"names":["target","getContainer","observer","mutations","x","Array","acc","n","mutationObserver","config","childList"],"mappings":";;;;;;;;;;;;;;;;;;oBAEe,6B;;AAAA,WAAA,6BAAA,CAAA,gBAAA,EAEb;AACE;AACA,UAAMA,MAAM,GAAGC,+BAAAA,aAAAA,CAAAA,gBAAAA,EAAAA,OAAAA,CAFjB,IAEiBA,CAAf,CAFF,CAIE;;AACA,UAAMC,QAAQ,GAAG,IAAA,gBAAA,CAAqB,UAAA,SAAA,EAAqB;AACvDC,MAAAA,SAAS,CAATA,MAAAA,CACYC,CAAC,IAAIA,CAAC,CAADA,UAAAA,CAAAA,MAAAA,GADjBD,CAAAA,EAAAA,GAAAA,CAESC,CAAC,IAAIC,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAA2BD,CAAC,CAF1CD,UAEcE,CAFdF,EAAAA,MAAAA,CAGY,CAAA,GAAA,EAAA,GAAA,KAAcG,GAAG,CAAHA,MAAAA,CAH1BH,GAG0BG,CAH1BH,EAAAA,EAAAA,EAAAA,OAAAA,CAIcI,CAAD,IAAsBC,gBAAgB,CAAA,CAAA,EAJnDL,QAImD,CAJnDA;AANN,KAKmB,CAAjB,CALF,CAaE;;AACA,UAAMM,MAAM,GAAG;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAf,CAdF,CAgBE;;AACAR,IAAAA,QAAQ,CAARA,OAAAA,CAAAA,MAAAA,EAAAA,MAAAA;AACH","sourcesContent":["import { getContainer } from \"./Container\"\n\nexport default function createMessageMutationObserver(\n    mutationObserver: (mutation: HTMLLIElement, observer: MutationObserver) => void\n) {\n    // select the target node\n    const target = getContainer().querySelector('div.unread-tag').closest('ul')\n\n    // create an observer instance\n    const observer = new MutationObserver(function (mutations) {\n        mutations\n            .filter(x => x.addedNodes.length > 0)\n            .map(x => Array.prototype.slice.call(x.addedNodes))\n            .reduce((acc, val) => acc.concat(val), [])\n            .forEach((n: HTMLLIElement) => mutationObserver(n, observer))\n    })\n\n    // configuration of the observer:\n    const config = { childList: true }\n    \n    // pass in the target node, as well as the observer options\n    observer.observe(target, config)\n}"],"file":"createMessageMutationObserver.js"}