{"version":3,"sources":["../../src/createMinimizableWebChat.tsx"],"names":["minimizableWebChatRef","React","createMinimizableWebChat","container","document","setContainer","Configuration","config","WebChatToggleStateObservable","getMessageUnreadCount","openWebChat","toggleWebChat","closeWebChat","startConversation","minimizableWebChat","getRefObject","endConversation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,QAAMA,qBAA0D,GAAA,aAAGC,gBAAnE,SAAmEA,EAAnE;;AAEA,QAAMC,wBAAwB,GAAG,CAAA,SAAA,EAAA,SAAA,EAAA,QAAA,KAA6H;AAC1J,QAAI,CAAJ,SAAA,EAAgB;AACZC,MAAAA,SAAS,GAAGC,QAAQ,CAARA,aAAAA,CAAZD,KAAYC,CAAZD;AACAC,MAAAA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAAAA,SAAAA;AACH;;AAEDC,iCAAAA,SAAAA;;AAEAC,4BAAAA,OAAAA,CAAAA,SAAAA,EAAAA,IAAAA,CAAuCC,MAAD,IAClC,mBAAA,MAAA,EAAA,aACI,gBAAA,aAAA,CAAA,4BAAA,EAAA;AACI,MAAA,GAAG,EADP,qBAAA;AAEI,MAAA,MAAM,EAAEA;AAFZ,KAAA,CADJ,EAAA,SAAA,EADJD,QACI,CADJA;;AAWA,WAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,oBAAA,CAAA,EAAA,EAAA,EAAA;AAEIE,MAAAA,4BAFJ,EAEIA,sCAFJ;AAAA,MAAA,WAAA;AAAA,MAAA,YAAA;AAAA,MAAA,iBAAA;AAAA,MAAA,eAAA;AAOIC,MAAAA;AAPJ,KAAA,CAAA;AAnBJ,GAAA;;AA8BA,QAAMC,WAAW,GAAG,MAAMC,aAAa,CAAvC,IAAuC,CAAvC;;AACA,QAAMC,YAAY,GAAG,MAAMD,aAAa,CAAxC,KAAwC,CAAxC;;AAEA,QAAME,iBAAiB,GAAG,YAAY;AAClC,UAAMC,kBAAkB,GAAG,MAAMC,4BAAjC,qBAAiCA,CAAjC;AAEAD,IAAAA,kBAAkB,CAAlBA,qBAAAA;AAHJ,GAAA;;AAMA,QAAME,eAAe,GAAG,YAAY;AAChC,UAAMF,kBAAkB,GAAG,MAAMC,4BAAjC,qBAAiCA,CAAjC;AAEAD,IAAAA,kBAAkB,CAAlBA,oBAAAA;AACAF,IAAAA,YAAY;AAJhB,GAAA;AAOA;;;;;;AAIA,QAAMD,aAAa,GAAG,MAAA,OAAA,IAA4B;AAC9C,UAAMG,kBAAkB,GAAG,MAAMC,4BAAjC,qBAAiCA,CAAjC;;AAEA,QAAA,OAAA,EAAa;AACTD,MAAAA,kBAAkB,CAAlBA,yBAAAA;AADJ,KAAA,MAEO;AACHA,MAAAA,kBAAkB,CAAlBA,yBAAAA;AACH;AAPL,GAAA;;AAUA,QAAML,qBAAqB,GAAG,MAAM;AAChC,UAAMK,kBAAkB,GAAGd,qBAAqB,CAAhD,OAAA;AAEA,WAAOc,kBAAkB,IAAIA,kBAAkB,CAAxCA,qBAAsBA,EAAtBA,IAAP,CAAA;AAHJ,GAAA;;oBAMA,wB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MinimizableWebChat from './components/MinimizableWebChat';\nimport Configuration from './utils/Configuration';\nimport getRefObject from './utils/getRefObject';\nimport { setContainer } from './utils/Container';\nimport WebChatAPI from './WebChatAPI';\nimport WebChatToggleStateObservable from './utils/WebChatToggleStateObservable';\n\nconst minimizableWebChatRef: React.RefObject<MinimizableWebChat> = React.createRef();\n\nconst createMinimizableWebChat = (rawConfig: GSSWebChat.IWebChatConfig, container?: HTMLElement, callback?: () => void): GSSWebChat.IMinimizableWebChatAPI => {\n    if (!container) {\n        container = document.createElement('div');\n        document.body.appendChild(container);\n    }\n\n    setContainer(container);\n\n    Configuration.initial(rawConfig).then((config) =>\n        ReactDOM.render(\n            <MinimizableWebChat\n                ref={minimizableWebChatRef}\n                config={config}\n            />,\n            container,\n            callback\n        )\n    );\n\n    return {\n        ...WebChatAPI,\n        WebChatToggleStateObservable,\n        openWebChat,\n        closeWebChat,\n        startConversation,\n        endConversation,\n        getMessageUnreadCount\n    };\n}\n\nconst openWebChat = () => toggleWebChat(true);\nconst closeWebChat = () => toggleWebChat(false);\n\nconst startConversation = async () => {\n    const minimizableWebChat = await getRefObject(minimizableWebChatRef);\n\n    minimizableWebChat.handleStartDirectLine();\n}\n\nconst endConversation = async () => {\n    const minimizableWebChat = await getRefObject(minimizableWebChatRef);\n\n    minimizableWebChat.handleStopDirectLine();\n    closeWebChat();\n}\n\n/**\n * Display or hide the WebChat.\n * @param display Use true to show the element or false to hide it.\n */\nconst toggleWebChat = async (display: boolean) => {\n    const minimizableWebChat = await getRefObject(minimizableWebChatRef);\n\n    if (display) {\n        minimizableWebChat.handleMaximizeButtonClick();\n    } else {\n        minimizableWebChat.handleMinimizeButtonClick();\n    }\n}\n\nconst getMessageUnreadCount = () => {\n    const minimizableWebChat = minimizableWebChatRef.current;\n\n    return minimizableWebChat && minimizableWebChat.getMessageUnreadCount() || 0;\n}\n\nexport default createMinimizableWebChat;"],"file":"createMinimizableWebChat.js"}