{"version":3,"sources":["../../src/createBasicWebChat.tsx"],"names":["createBasicWebChat","Configuration","config","directLine","setContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,QAAMA,kBAAkB,GAAG,CAAA,SAAA,EAAA,SAAA,EAAA,QAAA,KAAsH;AAC7IC,4BAAAA,OAAAA,CAAAA,SAAAA,EAAAA,IAAAA,CAAuCC,MAAD,IAClC,kCAAiBA,MAAM,CAAvB,iBAAA,EAAA,IAAA,CAAiDC,UAAD,IAC5C,mBAAA,MAAA,EAAA,aACI,gBAAA,aAAA,CAAA,iBAAA,EAAA;AACI,MAAA,UAAU,EADd,UAAA;AAEI,MAAA,MAAM,EAAED;AAFZ,KAAA,CADJ,EAAA,SAAA,EAFRD,QAEQ,CADJ,CADJA;;AAaAG,iCAAAA,SAAAA;AAEA,WAAA,oBAAA;AAhBJ,GAAA;;oBAmBA,kB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WebChat from './components/WebChat';\nimport Configuration from './utils/Configuration';\nimport { createDirectLine } from './utils/DirectLine';\nimport { setContainer } from './utils/Container';\nimport WebChatAPI from './WebChatAPI';\n\nconst createBasicWebChat = (rawConfig: GSSWebChat.IWebChatConfig, container: HTMLElement, callback?: () => void): GSSWebChat.IBasicWebChatAPI => {\n    Configuration.initial(rawConfig).then((config) =>\n        createDirectLine(config.directLineOptions).then((directLine) =>\n            ReactDOM.render(\n                <WebChat\n                    directLine={directLine}\n                    config={config}\n                />,\n                container,\n                callback\n            )\n        )\n    );\n\n    setContainer(container);\n\n    return WebChatAPI;\n}\n\nexport default createBasicWebChat;"],"file":"createBasicWebChat.js"}