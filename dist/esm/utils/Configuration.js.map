{"version":3,"sources":["../../../src/utils/Configuration.ts"],"names":["createStore","Storage","jwtDecode","config","initial","rawConfig","directLineOptions","decoded","token","botId","toLowerCase","userId","getUserId","randomUserID","userName","domain","origin","directLinePath","endsWith","webSocket","checkWebSocketIsOpen","pollingAutoClose","conversationId","getConversationId","watermark","webChatOptions","webChatButtonOptions","buttonOptions","iconUrl","visible","displayOnTheSide","webChatHeaderOptions","headerOptions","styleOptions","Object","assign","bubbleBackground","bubbleBorderColor","bubbleBorderRadius","bubbleBorderStyle","bubbleBorderWidth","bubbleFromUserBackground","bubbleFromUserBorderColor","bubbleFromUserBorderRadius","bubbleFromUserBorderStyle","bubbleFromUserBorderWidth","bubbleFromUserTextColor","botAvatarImage","botAvatarInitials","botName","store","get","Math","random","toString","substr","Promise","resolve","reject","WebSocket","ws","replace","onopen","close","onerror","evt"],"mappings":"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","sourcesContent":["import { createStore } from './Store'\nimport Storage from './Storage'\nimport jwtDecode from 'jwt-decode';\n\nlet config: GSSWebChat.IWebChatConfig\n\nconst initial = async (rawConfig: GSSWebChat.IWebChatConfig): Promise<GSSWebChat.IWebChatConfig> => {\n    config = { ...rawConfig }\n\n    const directLineOptions = config.directLineOptions = { ...config.directLineOptions }\n    const decoded: any = (directLineOptions.token) ? jwtDecode(directLineOptions.token) : {}\n\n    config.botId = (decoded.botId || config.botId).toLowerCase()\n    config.userId = decoded.userId || config.userId || Storage.getUserId() || randomUserID()\n    config.userName = config.userName || ''\n\n    directLineOptions.domain = decoded.origin || directLineOptions.domain\n    const directLinePath = directLineOptions.domain.endsWith('/directline') ? '' : '/directline'\n    directLineOptions.domain += `${directLinePath}/${config.botId}`\n    directLineOptions.webSocket = !(directLineOptions.webSocket === false) && await checkWebSocketIsOpen(directLineOptions.domain)\n    directLineOptions.pollingAutoClose = (directLineOptions.pollingAutoClose === true)\n    directLineOptions.conversationId = decoded.conversationId || directLineOptions.conversationId || Storage.getConversationId() || ''\n    directLineOptions.watermark = 0\n\n    if (!directLineOptions.webSocket && !directLineOptions.pollingAutoClose) {\n        directLineOptions.watermark = -1 //polling watermark 設成 -1 才會先取歷史訊息\n    }\n\n    const webChatOptions = config.webChatOptions = { ...config.webChatOptions } as GSSWebChat.IWebChatOptions\n    const webChatButtonOptions = webChatOptions.buttonOptions = { ...webChatOptions.buttonOptions } as GSSWebChat.IWebChatButtonOptions\n    webChatButtonOptions.iconUrl = webChatButtonOptions.iconUrl || 'https://bot-framework.azureedge.net/bot-icons-v1/bot-framework-default-7.png'\n    webChatButtonOptions.visible = !(webChatButtonOptions.visible === false)\n    webChatButtonOptions.displayOnTheSide = (webChatButtonOptions.displayOnTheSide === true)\n\n    const webChatHeaderOptions = webChatOptions.headerOptions = { ...webChatOptions.headerOptions } as GSSWebChat.IWebChatHeaderOptions\n\n    // default style.\n    const styleOptions = webChatOptions.styleOptions = Object.assign({\n        // Bubble\n        bubbleBackground: '#eceff1',\n        bubbleBorderColor: '#E6E6E6',\n        bubbleBorderRadius: '0px 12px 12px 12px',\n        bubbleBorderStyle: 'solid',\n        bubbleBorderWidth: 1,\n        bubbleFromUserBackground: '#0078d7',\n        bubbleFromUserBorderColor: '#E6E6E6',\n        bubbleFromUserBorderRadius: '12px 0px 12px 12px',\n        bubbleFromUserBorderStyle: 'solid',\n        bubbleFromUserBorderWidth: 1,\n        bubbleFromUserTextColor: '#ffffff',\n\n        // Avatar\n        botAvatarImage: webChatButtonOptions.iconUrl,\n        botAvatarInitials: config.botName\n    }, { ...webChatOptions.styleOptions })\n\n    // createStore.\n    webChatOptions.store = createStore()\n\n    return config\n}\n\nconst get = () => config\n\nconst randomUserID = (): string => `r_${Math.random().toString(36).substr(2, 10)}`\n\n/** 檢查 WebSocket 是否有通 (return true = open) */\nconst checkWebSocketIsOpen = async (domain: string): Promise<boolean> => {\n    return new Promise(function (resolve, reject) {\n        if (!WebSocket) return resolve(false)\n\n        const ws = new WebSocket(domain.replace('http', 'ws'))\n\n        ws.onopen = function () {\n            ws.close()\n            resolve(true)\n        }\n        ws.onerror = function (evt) { resolve(false) }\n    })\n}\n\nexport default {\n    initial,\n    get\n}"],"file":"Configuration.js"}