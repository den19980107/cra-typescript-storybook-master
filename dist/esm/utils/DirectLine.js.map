{"version":3,"sources":["../../../src/utils/DirectLine.ts"],"names":["Configuration","directLine","createDirectLine","directLineOptions","token","window","WebChat","url","domain","conversationId","res","fetch","method","body","JSON","stringify","userId","get","headers","Headers","json","console","log","getDirectLine","endDirectLine","end","getWatermark","watermark","addCurrentUser","next","currentUserId","postActivity","from","id","membersAdded","type","subscribe","error","err","complete","removeCurrentUser","membersRemoved","addMembers","members","removeMembers"],"mappings":"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","sourcesContent":["import Configuration from \"./Configuration\"\n\nlet directLine: BotFrameworkWebChat.IDirectLine = null\n\nconst createDirectLine = async (directLineOptions: GSSWebChat.IDirectLineOptions): Promise<BotFrameworkWebChat.IDirectLine> => {\n    if (directLineOptions.token) {\n        directLine = window.WebChat.createDirectLine(directLineOptions)\n    }\n    else {\n        //fetchToken\n        const url = directLineOptions.domain + '/tokens/generate/' + directLineOptions.conversationId\n        const res = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({ userId: Configuration.get().userId }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        const { token } = await res.json()\n\n        directLine = window.WebChat.createDirectLine({ ...directLineOptions, token })\n    }\n\n    console.log('conversationId: ' + directLine.conversationId)\n    console.log('createDirectLine')\n\n    return directLine\n}\n\n\nconst getDirectLine = () => directLine\n\nconst endDirectLine = () => {\n    directLine && directLine.end()\n    directLine = null\n}\n\nconst getWatermark = () => directLine && directLine.watermark || 0\n\n/* post activity */\n//Activity types: https://docs.microsoft.com/zh-tw/azure/bot-service/dotnet/bot-builder-dotnet-activities?view=azure-bot-service-3.0\n\nconst addCurrentUser = (next: Function) => {\n    const currentUserId = Configuration.get().userId\n\n    directLine && directLine.postActivity({\n        from: { id: currentUserId },\n        membersAdded: [{ id: currentUserId }],\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...addCurrentUser: ${err}`),\n        complete: () => console.log('addCurrentUser complete.')\n    })\n}\n\nconst removeCurrentUser = (next: Function) => {\n    const currentUserId = Configuration.get().userId\n\n    directLine && directLine.postActivity({\n        from: { id: currentUserId },\n        membersRemoved: [{ id: currentUserId }],\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...removeMembers: ${err}`),\n        complete: () => console.log('removeMembers complete.')\n    })\n}\n\nconst addMembers = (members: Array<GSSWebChat.IMember>, next: Function) => {\n    directLine && directLine.postActivity({\n        from: { id: Configuration.get().userId },\n        membersAdded: members,\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...addMembers: ${err}`),\n        complete: () => console.log('addMembers complete.')\n    })\n}\n\nconst removeMembers = (members: Array<GSSWebChat.IMember>, next: Function) => {\n    directLine && directLine.postActivity({\n        from: { id: Configuration.get().userId },\n        membersRemoved: members,\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...removeMembers: ${err}`),\n        complete: () => console.log('removeMembers complete.')\n    })\n}\n\nexport default {\n    getWatermark,\n    addMembers,\n    removeMembers,\n    addCurrentUser,\n    removeCurrentUser,\n    createDirectLine\n}\n\nexport {\n    createDirectLine,\n    getDirectLine,\n    endDirectLine\n}"],"file":"DirectLine.js"}