{"version":3,"sources":["../../src/createMinimizableWebChat.tsx"],"names":["React","ReactDOM","MinimizableWebChat","Configuration","getRefObject","setContainer","WebChatAPI","WebChatToggleStateObservable","minimizableWebChatRef","createRef","createMinimizableWebChat","rawConfig","container","callback","document","createElement","body","appendChild","initial","then","config","render","openWebChat","closeWebChat","startConversation","endConversation","getMessageUnreadCount","toggleWebChat","minimizableWebChat","handleStartDirectLine","handleStopDirectLine","display","handleMaximizeButtonClick","handleMinimizeButtonClick","current"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,4BAAP,MAAyC,sCAAzC;AAEA,MAAMC,qBAA0D,gBAAGR,KAAK,CAACS,SAAN,EAAnE;;AAEA,MAAMC,wBAAwB,GAAG,CAACC,SAAD,EAAuCC,SAAvC,EAAgEC,QAAhE,KAA6H;AAC1J,MAAI,CAACD,SAAL,EAAgB;AACZA,IAAAA,SAAS,GAAGE,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;AACAD,IAAAA,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BL,SAA1B;AACH;;AAEDP,EAAAA,YAAY,CAACO,SAAD,CAAZ;AAEAT,EAAAA,aAAa,CAACe,OAAd,CAAsBP,SAAtB,EAAiCQ,IAAjC,CAAuCC,MAAD,IAClCnB,QAAQ,CAACoB,MAAT,eACI,oBAAC,kBAAD;AACI,IAAA,GAAG,EAAEb,qBADT;AAEI,IAAA,MAAM,EAAEY;AAFZ,IADJ,EAKIR,SALJ,EAMIC,QANJ,CADJ;AAWA,yCACOP,UADP;AAEIC,IAAAA,4BAFJ;AAGIe,IAAAA,WAHJ;AAIIC,IAAAA,YAJJ;AAKIC,IAAAA,iBALJ;AAMIC,IAAAA,eANJ;AAOIC,IAAAA;AAPJ;AASH,CA5BD;;AA8BA,MAAMJ,WAAW,GAAG,MAAMK,aAAa,CAAC,IAAD,CAAvC;;AACA,MAAMJ,YAAY,GAAG,MAAMI,aAAa,CAAC,KAAD,CAAxC;;AAEA,MAAMH,iBAAiB,GAAG,YAAY;AAClC,QAAMI,kBAAkB,GAAG,MAAMxB,YAAY,CAACI,qBAAD,CAA7C;AAEAoB,EAAAA,kBAAkB,CAACC,qBAAnB;AACH,CAJD;;AAMA,MAAMJ,eAAe,GAAG,YAAY;AAChC,QAAMG,kBAAkB,GAAG,MAAMxB,YAAY,CAACI,qBAAD,CAA7C;AAEAoB,EAAAA,kBAAkB,CAACE,oBAAnB;AACAP,EAAAA,YAAY;AACf,CALD;AAOA;;;;;;AAIA,MAAMI,aAAa,GAAG,MAAOI,OAAP,IAA4B;AAC9C,QAAMH,kBAAkB,GAAG,MAAMxB,YAAY,CAACI,qBAAD,CAA7C;;AAEA,MAAIuB,OAAJ,EAAa;AACTH,IAAAA,kBAAkB,CAACI,yBAAnB;AACH,GAFD,MAEO;AACHJ,IAAAA,kBAAkB,CAACK,yBAAnB;AACH;AACJ,CARD;;AAUA,MAAMP,qBAAqB,GAAG,MAAM;AAChC,QAAME,kBAAkB,GAAGpB,qBAAqB,CAAC0B,OAAjD;AAEA,SAAON,kBAAkB,IAAIA,kBAAkB,CAACF,qBAAnB,EAAtB,IAAoE,CAA3E;AACH,CAJD;;AAMA,eAAehB,wBAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MinimizableWebChat from './components/MinimizableWebChat';\nimport Configuration from './utils/Configuration';\nimport getRefObject from './utils/getRefObject';\nimport { setContainer } from './utils/Container';\nimport WebChatAPI from './WebChatAPI';\nimport WebChatToggleStateObservable from './utils/WebChatToggleStateObservable';\n\nconst minimizableWebChatRef: React.RefObject<MinimizableWebChat> = React.createRef();\n\nconst createMinimizableWebChat = (rawConfig: GSSWebChat.IWebChatConfig, container?: HTMLElement, callback?: () => void): GSSWebChat.IMinimizableWebChatAPI => {\n    if (!container) {\n        container = document.createElement('div');\n        document.body.appendChild(container);\n    }\n\n    setContainer(container);\n\n    Configuration.initial(rawConfig).then((config) =>\n        ReactDOM.render(\n            <MinimizableWebChat\n                ref={minimizableWebChatRef}\n                config={config}\n            />,\n            container,\n            callback\n        )\n    );\n\n    return {\n        ...WebChatAPI,\n        WebChatToggleStateObservable,\n        openWebChat,\n        closeWebChat,\n        startConversation,\n        endConversation,\n        getMessageUnreadCount\n    };\n}\n\nconst openWebChat = () => toggleWebChat(true);\nconst closeWebChat = () => toggleWebChat(false);\n\nconst startConversation = async () => {\n    const minimizableWebChat = await getRefObject(minimizableWebChatRef);\n\n    minimizableWebChat.handleStartDirectLine();\n}\n\nconst endConversation = async () => {\n    const minimizableWebChat = await getRefObject(minimizableWebChatRef);\n\n    minimizableWebChat.handleStopDirectLine();\n    closeWebChat();\n}\n\n/**\n * Display or hide the WebChat.\n * @param display Use true to show the element or false to hide it.\n */\nconst toggleWebChat = async (display: boolean) => {\n    const minimizableWebChat = await getRefObject(minimizableWebChatRef);\n\n    if (display) {\n        minimizableWebChat.handleMaximizeButtonClick();\n    } else {\n        minimizableWebChat.handleMinimizeButtonClick();\n    }\n}\n\nconst getMessageUnreadCount = () => {\n    const minimizableWebChat = minimizableWebChatRef.current;\n\n    return minimizableWebChat && minimizableWebChat.getMessageUnreadCount() || 0;\n}\n\nexport default createMinimizableWebChat;"],"file":"createMinimizableWebChat.js"}