{"version":3,"sources":["../../../src/components/WebChat.tsx"],"names":["memoize","React","ReactWebChat_Package","Component","constructor","props","createStyleSet","styleOptions","console","log","window","WebChat","render","className","directLine","config","userId","userName","webChatOptions","store","state","ReactWebChat","webChatProps","userID","username","styleSet","activityMiddleware","forEach","k","createElement"],"mappings":";;;;;;;;AAAA,OAAOA,OAAP,MAAoB,aAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,sBAAjC;AACA,OAAO,uBAAP;AAWA,eAAe,qBAAcD,KAAK,CAACE,SAApB,CAA0D;AAIrEC,EAAAA,WAAW,CAACC,KAAD,EAAgC;AACvC,UAAMA,KAAN;AAEA,SAAKC,cAAL,GAAsBN,OAAO,CAAEO,YAAD,IAAqD;AAC/EC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,aAAOC,MAAM,CAACC,OAAP,CAAeL,cAAf,CAA8BC,YAA9B,CAAP;AACH,KAJ4B,CAA7B;AAMH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AACFP,MAAAA,KAAK,EAAE;AAAEQ,QAAAA,SAAF;AAAaC,QAAAA,UAAb;AACHC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,MAAF;AAAUC,UAAAA,QAAV;AACJC,UAAAA,cAAc,EAAE;AAAEC,YAAAA,KAAF;AAASZ,YAAAA;AAAT;AADZ;AADL,OADL;AAMFa,MAAAA,KAAK,EAAE;AANL,QAOF,IAPJ;AASA;;;;;;;;;;;AAYA;;AACA,QAAI;AAAEC,MAAAA;AAAF,QAAmBX,MAAM,CAACC,OAA9B;;AACA,QAAI,CAACU,YAAL,EAAmB;AACf;AACAA,MAAAA,YAAY,GAAGnB,oBAAf;AACH;;AAGD,QAAIoB,YAAiB,mCACd,KAAKjB,KAAL,CAAWU,MADG;AAEjBQ,MAAAA,MAAM,EAAEP,MAFS;AAGjBQ,MAAAA,QAAQ,EAAEP,QAHO;AAIjBJ,MAAAA,SAAS,EAAG,GAAEA,SAAS,IAAI,EAAG,WAJb;AAKjBC,MAAAA,UAAU,EAAEA,UALK;AAMjBK,MAAAA,KAAK,EAAEA,KANU;AAOjBM,MAAAA,QAAQ,EAAE,KAAKnB,cAAL,CAAoBC,YAApB,CAPO;AAQjBmB,MAAAA,kBAAkB,EAAE,KAAKA;AARR,MAArB;;AAWA,KAAC,OAAD,EAAU,SAAV,EAAqB,QAArB,EAA+B,UAA/B,EAA2C,mBAA3C,EAAgE,gBAAhE,EACKC,OADL,CACaC,CAAC,IAAI,OAAON,YAAY,CAACM,CAAD,CADrC;AAGA,WACId,UAAU,gBACNb,KAAK,CAAC4B,aAAN,CAAoBR,YAApB,EAAkCC,YAAlC,CADM,gBAGN;AAAK,MAAA,SAAS,EAAG,GAAET,SAAS,IAAI,EAAG;AAAnC,oBACI;AAAK,MAAA,SAAS,EAAC;AAAf,oBACI;AAAK,MAAA,SAAS,EAAC;AAAf,oBACI;AAAM,MAAA,SAAS,EAAC;AAAhB,MADJ,CADJ,eAII,kFAJJ,CADJ,CAJR;AAaH;;AAxEoE;;;AARrEA,EAAAA,S","sourcesContent":["import memoize from 'memoize-one';\nimport React from 'react';\nimport ReactWebChat_Package from 'botframework-webchat'\nimport '../styles/WebChat.css';\n\ninterface WebChatProps {\n    className?: string,\n    config: GSSWebChat.IWebChatConfig,\n    directLine: BotFrameworkWebChat.IDirectLine\n}\n\ninterface WebChatState {\n}\n\nexport default class extends React.Component<WebChatProps, WebChatState> {\n    createStyleSet: (styleOptions: BotFrameworkWebChat.IStyleOptions) => any;\n    activityMiddleware: any;\n\n    constructor(props: Readonly<WebChatProps>) {\n        super(props);\n\n        this.createStyleSet = memoize((styleOptions: BotFrameworkWebChat.IStyleOptions) => {\n            console.log('createStyleSet');\n\n            return window.WebChat.createStyleSet(styleOptions);\n        });\n\n    }\n\n    render() {\n        const {\n            props: { className, directLine,\n                config: { userId, userName,\n                    webChatOptions: { store, styleOptions }\n                }\n            },\n            state: { }\n        } = this;\n\n        /**\n         * 引入 ReactWebChat 有分兩種狀況：\n         * \n         * 1. 使用 webpack build 出來的 gss-webchat.js：\n         *    如果是使用 gss-webchat.js 需要在 html 中引入 botframework webchat-es5.js 的 cdn\n         *    所以 ReactWebChat 會從 window 中拿取\n         * \n         * 2. 使用 rollup.js build 出可以在其他 react 專案中以 component 引入的 gss-webchat-component.js：\n         *    使用 gss-webchat-component.js 則是需要 user 在自己的專案中安裝 botframework-webchat 的 npm 套件\n         *    所以 ReactWebChat 會從 package 中拿取\n         */\n\n        // 1. 使用 webpack build 出來的 gss-webchat.js\n        let { ReactWebChat } = window.WebChat;\n        if (!ReactWebChat) {\n            // 2. 使用 rollup.js build 出可以在其他 react 專案中以 component 引入的 gss-webchat-component.js\n            ReactWebChat = ReactWebChat_Package\n        }\n\n\n        let webChatProps: any = {\n            ...this.props.config,\n            userID: userId,\n            username: userName,\n            className: `${className || ''} web-chat`,\n            directLine: directLine,\n            store: store,\n            styleSet: this.createStyleSet(styleOptions),\n            activityMiddleware: this.activityMiddleware\n        };\n\n        ['botId', 'botName', 'userId', 'userName', 'directLineOptions', 'webChatOptions']\n            .forEach(k => delete webChatProps[k])\n\n        return (\n            directLine ?\n                React.createElement(ReactWebChat, webChatProps)\n                :\n                <div className={`${className || ''} connect-spinner`}>\n                    <div className=\"content\">\n                        <div className=\"icon\">\n                            <span className=\"ms-Icon ms-Icon--Robot\" />\n                        </div>\n                        <p>連線中，請稍等。</p>\n                    </div>\n                </div>\n        );\n    }\n}"],"file":"WebChat.js"}