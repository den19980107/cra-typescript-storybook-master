{"version":3,"sources":["../../../src/components/UnreadTag.tsx"],"names":["React","Store","createMessageMutationObserver","Component","constructor","props","console","log","unreadTagDomRef","createRef","toogle","bind","moveToBottom","scrollToTag","state","visible","componentDidMount","that","firstUnreadId","lastHistoryId","mutation","observer","hasChildNodes","firstElementChild","getAttribute","disconnect","ActionObservable","subscribe","action","type","activity","payload","id","setTimeout","unsubscribe","display","setState","unreadTag","current","closest","append","immediatelyInvoked","logContainer","parentElement","scrollHeight","clientHeight","scroll","addEventListener","waitHistoryLoaded","scrollTop","removeEventListener","Math","max","offsetTop","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Store from '../utils/Store'\nimport createMessageMutationObserver from '../utils/createMessageMutationObserver'\n\ninterface UnreadTagProps {\n    firstUnreadId: string,\n    lastHistoryId: string\n}\n\ninterface UnreadTagState {\n    visible: boolean\n}\n\nexport default class extends React.Component<UnreadTagProps, UnreadTagState> {\n    unreadTagDomRef: React.RefObject<HTMLDivElement>\n\n    constructor(props: Readonly<UnreadTagProps>) {\n        super(props)\n        console.log('UnreadTag constructor.')\n\n        this.unreadTagDomRef = React.createRef()\n\n        this.toogle = this.toogle.bind(this)\n        this.moveToBottom = this.moveToBottom.bind(this)\n        this.scrollToTag = this.scrollToTag.bind(this)\n\n        this.state = {\n            visible: false\n        }\n    }\n\n    componentDidMount() {\n        const that = this\n        let { firstUnreadId, lastHistoryId } = this.props\n\n        if (firstUnreadId) {\n            // 使用 MutationObserver 當 dom rendered 後再調整 scrollbar。\n            createMessageMutationObserver((mutation: HTMLLIElement, observer: MutationObserver) => {\n                if (mutation.hasChildNodes && mutation.firstElementChild.getAttribute('data-key') === this.props.lastHistoryId) {\n                    observer.disconnect()\n                    this.scrollToTag(false)\n                }\n            })\n        }\n\n        Store.ActionObservable.subscribe(function subscribe(action) {\n            console.log('UnreadTag ActionObservable.')\n\n            if (action.type === 'DIRECT_LINE/INCOMING_ACTIVITY') {\n                const { activity } = action.payload\n\n                if (firstUnreadId && activity.id === firstUnreadId) {\n                    that.moveToBottom().toogle(true)\n                    firstUnreadId = null\n                    lastHistoryId = null\n                }\n                else if (lastHistoryId && activity.id === lastHistoryId) {\n                    setTimeout(() => that.moveToBottom())\n                    lastHistoryId = null\n                }\n\n                if (!firstUnreadId && !lastHistoryId) {\n                    Store.ActionObservable.unsubscribe(subscribe)\n                }\n            }\n        })\n    }\n\n    toogle(display: boolean) {\n        this.setState({ visible: display })\n\n        return this\n    }\n\n    moveToBottom() {\n        const unreadTag = this.unreadTagDomRef.current\n        console.log('moveToBottom')\n        unreadTag.closest('ul').append(unreadTag.closest('li'))\n\n        return this\n    }\n\n    scrollToTag(immediatelyInvoked: boolean) {\n        const unreadTag = this.unreadTagDomRef.current\n        const logContainer = unreadTag.parentElement.closest('div')\n\n        //判斷是否有 scrollbar\n        if (logContainer.scrollHeight > logContainer.clientHeight) {\n            if (immediatelyInvoked) {\n                scroll()\n            }\n            else {\n                logContainer.addEventListener('scroll', function waitHistoryLoaded() {\n                    // 載完對話後，webchat 會做 scrollToEnd，這時候再將 scrollbar 定位到 unread tag。\n                    if (logContainer.clientHeight + logContainer.scrollTop >= logContainer.scrollHeight) {\n                        scroll()\n                        logContainer.removeEventListener('scroll', waitHistoryLoaded)\n                    }\n                })\n            }\n        }\n\n        function scroll() {\n            logContainer.scrollTop = Math.max(unreadTag.offsetTop - 30, 0)\n        }\n\n        return this\n    }\n\n    //tag style ref: \n    //'border:2px #ccc solidborder-radius:10pxwidth:90%height: 20pxbackground-color:#eeetext-align: centermargin: auto'\n\n    render() {\n        const { visible } = this.state\n\n        return <div ref={this.unreadTagDomRef} className=\"unread-tag\" hidden={!visible}>以下爲尚未閱讀的訊息</div>\n    }\n}"],"file":"UnreadTag.js"}