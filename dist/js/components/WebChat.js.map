{"version":3,"sources":["../../../src/components/WebChat.tsx"],"names":["props","createStyleSet","styleOptions","console","log","window","WebChat","className","directLine","config","userId","userName","webChatOptions","store","state","ReactWebChat","ReactWebChat_Package","webChatProps","userID","username","styleSet","activityMiddleware","forEach","k","React","createElement","Component"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeI,oBAAYA,KAAZ,EAA2C;AAAA;;AAAA;;AACvC,8BAAMA,KAAN;AAEA,UAAKC,cAAL,GAAsB,yBAAQ,UAACC,YAAD,EAAqD;AAC/EC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,aAAOC,MAAM,CAACC,OAAP,CAAeL,cAAf,CAA8BC,YAA9B,CAAP;AACH,KAJqB,CAAtB;AAHuC;AAS1C;;;;6BAEQ;AAAA,wBAQD,IARC,CAEDF,KAFC;AAAA,UAEQO,SAFR,eAEQA,SAFR;AAAA,UAEmBC,UAFnB,eAEmBA,UAFnB;AAAA,2CAGGC,MAHH;AAAA,UAGaC,MAHb,sBAGaA,MAHb;AAAA,UAGqBC,QAHrB,sBAGqBA,QAHrB;AAAA,qDAIOC,cAJP;AAAA,UAIyBC,KAJzB,yBAIyBA,KAJzB;AAAA,UAIgCX,YAJhC,yBAIgCA,YAJhC;;AAAA,gCAQD,IARC,CAODY,KAPC;AAUL;;;;;;;;;;;AAYA;;;AAtBK,UAuBCC,YAvBD,GAuBkBV,MAAM,CAACC,OAvBzB,CAuBCS,YAvBD;;AAwBL,UAAI,CAACA,YAAL,EAAmB;AACf;AACAA,QAAAA,YAAY,GAAGC,4BAAf;AACH;;AAGD,UAAIC,YAAiB,mCACd,KAAKjB,KAAL,CAAWS,MADG;AAEjBS,QAAAA,MAAM,EAAER,MAFS;AAGjBS,QAAAA,QAAQ,EAAER,QAHO;AAIjBJ,QAAAA,SAAS,YAAKA,SAAS,IAAI,EAAlB,cAJQ;AAKjBC,QAAAA,UAAU,EAAEA,UALK;AAMjBK,QAAAA,KAAK,EAAEA,KANU;AAOjBO,QAAAA,QAAQ,EAAE,KAAKnB,cAAL,CAAoBC,YAApB,CAPO;AAQjBmB,QAAAA,kBAAkB,EAAE,KAAKA;AARR,QAArB;;AAWA,OAAC,OAAD,EAAU,SAAV,EAAqB,QAArB,EAA+B,UAA/B,EAA2C,mBAA3C,EAAgE,gBAAhE,EACKC,OADL,CACa,UAAAC,CAAC;AAAA,eAAI,OAAON,YAAY,CAACM,CAAD,CAAvB;AAAA,OADd;AAGA,aACIf,UAAU,gBACNgB,eAAMC,aAAN,CAAoBV,YAApB,EAAkCE,YAAlC,CADM,gBAGN;AAAK,QAAA,SAAS,YAAKV,SAAS,IAAI,EAAlB;AAAd,sBACI;AAAK,QAAA,SAAS,EAAC;AAAf,sBACI;AAAK,QAAA,SAAS,EAAC;AAAf,sBACI;AAAM,QAAA,SAAS,EAAC;AAAhB,QADJ,CADJ,eAII,2FAJJ,CADJ,CAJR;AAaH;;;;EAxEwBiB,eAAME,S;;;;;AAR/BnB,EAAAA,S","sourcesContent":["import memoize from 'memoize-one';\nimport React from 'react';\nimport ReactWebChat_Package from 'botframework-webchat'\nimport '../styles/WebChat.css';\n\ninterface WebChatProps {\n    className?: string,\n    config: GSSWebChat.IWebChatConfig,\n    directLine: BotFrameworkWebChat.IDirectLine\n}\n\ninterface WebChatState {\n}\n\nexport default class extends React.Component<WebChatProps, WebChatState> {\n    createStyleSet: (styleOptions: BotFrameworkWebChat.IStyleOptions) => any;\n    activityMiddleware: any;\n\n    constructor(props: Readonly<WebChatProps>) {\n        super(props);\n\n        this.createStyleSet = memoize((styleOptions: BotFrameworkWebChat.IStyleOptions) => {\n            console.log('createStyleSet');\n\n            return window.WebChat.createStyleSet(styleOptions);\n        });\n\n    }\n\n    render() {\n        const {\n            props: { className, directLine,\n                config: { userId, userName,\n                    webChatOptions: { store, styleOptions }\n                }\n            },\n            state: { }\n        } = this;\n\n        /**\n         * 引入 ReactWebChat 有分兩種狀況：\n         * \n         * 1. 使用 webpack build 出來的 gss-webchat.js：\n         *    如果是使用 gss-webchat.js 需要在 html 中引入 botframework webchat-es5.js 的 cdn\n         *    所以 ReactWebChat 會從 window 中拿取\n         * \n         * 2. 使用 rollup.js build 出可以在其他 react 專案中以 component 引入的 gss-webchat-component.js：\n         *    使用 gss-webchat-component.js 則是需要 user 在自己的專案中安裝 botframework-webchat 的 npm 套件\n         *    所以 ReactWebChat 會從 package 中拿取\n         */\n\n        // 1. 使用 webpack build 出來的 gss-webchat.js\n        let { ReactWebChat } = window.WebChat;\n        if (!ReactWebChat) {\n            // 2. 使用 rollup.js build 出可以在其他 react 專案中以 component 引入的 gss-webchat-component.js\n            ReactWebChat = ReactWebChat_Package\n        }\n\n\n        let webChatProps: any = {\n            ...this.props.config,\n            userID: userId,\n            username: userName,\n            className: `${className || ''} web-chat`,\n            directLine: directLine,\n            store: store,\n            styleSet: this.createStyleSet(styleOptions),\n            activityMiddleware: this.activityMiddleware\n        };\n\n        ['botId', 'botName', 'userId', 'userName', 'directLineOptions', 'webChatOptions']\n            .forEach(k => delete webChatProps[k])\n\n        return (\n            directLine ?\n                React.createElement(ReactWebChat, webChatProps)\n                :\n                <div className={`${className || ''} connect-spinner`}>\n                    <div className=\"content\">\n                        <div className=\"icon\">\n                            <span className=\"ms-Icon ms-Icon--Robot\" />\n                        </div>\n                        <p>連線中，請稍等。</p>\n                    </div>\n                </div>\n        );\n    }\n}"],"file":"WebChat.js"}