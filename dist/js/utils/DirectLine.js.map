{"version":3,"sources":["../../../src/utils/DirectLine.ts"],"names":["directLine","createDirectLine","directLineOptions","token","url","domain","conversationId","fetch","method","body","JSON","stringify","userId","Configuration","get","headers","Headers","res","json","console","log","getDirectLine","endDirectLine","end","getWatermark","watermark","addCurrentUser","next","config","postActivity","from","id","name","userName","membersAdded","type","subscribe","error","err","complete","removeCurrentUser","membersRemoved","addMembers","members","removeMembers"],"mappings":"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","sourcesContent":["import Configuration from \"./Configuration\"\nimport { createDirectLine as BotFrameworkWebChat_createDirectLine } from 'botframework-webchat'\nlet directLine: BotFrameworkWebChat.IDirectLine = null\n\nconst createDirectLine = async (directLineOptions: GSSWebChat.IDirectLineOptions): Promise<BotFrameworkWebChat.IDirectLine> => {\n    if (directLineOptions.token) {\n        directLine = BotFrameworkWebChat_createDirectLine(directLineOptions)\n    }\n    else {\n        //fetchToken\n        const url = directLineOptions.domain + '/tokens/generate/' + directLineOptions.conversationId\n        const res = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({ userId: Configuration.get().userId }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        const { token } = await res.json()\n\n        directLine = BotFrameworkWebChat_createDirectLine({ ...directLineOptions, token })\n    }\n\n    console.log('conversationId: ' + directLine.conversationId)\n    console.log('createDirectLine')\n\n    return directLine\n}\n\nconst getDirectLine = () => directLine\n\nconst endDirectLine = () => {\n    directLine && directLine.end()\n    directLine = null\n}\n\nconst getWatermark = () => directLine && directLine.watermark || 0\n\n/* post activity */\n//Activity types: https://docs.microsoft.com/zh-tw/azure/bot-service/dotnet/bot-builder-dotnet-activities?view=azure-bot-service-3.0\n\nconst addCurrentUser = (next: Function) => {\n    const config = Configuration.get()\n\n    directLine && directLine.postActivity({\n        from: { id: config.userId, name: config.userName },\n        membersAdded: [{ id: config.userId }],\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...addCurrentUser: ${err}`),\n        complete: () => console.log('addCurrentUser complete.')\n    })\n}\n\nconst removeCurrentUser = (next: Function) => {\n    const config = Configuration.get()\n\n    directLine && directLine.postActivity({\n        from: { id: config.userId, name: config.userName },\n        membersRemoved: [{ id: config.userId }],\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...removeMembers: ${err}`),\n        complete: () => console.log('removeMembers complete.')\n    })\n}\n\nconst addMembers = (members: Array<GSSWebChat.IMember>, next: Function) => {\n    const config = Configuration.get()\n\n    directLine && directLine.postActivity({\n        from: { id: config.userId, name: config.userName },\n        membersAdded: members,\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...addMembers: ${err}`),\n        complete: () => console.log('addMembers complete.')\n    })\n}\n\nconst removeMembers = (members: Array<GSSWebChat.IMember>, next: Function) => {\n    const config = Configuration.get()\n\n    directLine && directLine.postActivity({\n        from: { id: config.userId, name: config.userName },\n        membersRemoved: members,\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...removeMembers: ${err}`),\n        complete: () => console.log('removeMembers complete.')\n    })\n}\n\nexport default {\n    getWatermark,\n    addMembers,\n    removeMembers,\n    addCurrentUser,\n    removeCurrentUser\n}\n\nexport {\n    createDirectLine,\n    getDirectLine,\n    endDirectLine\n}"],"file":"DirectLine.js"}