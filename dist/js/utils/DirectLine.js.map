{"version":3,"sources":["../../../src/utils/DirectLine.ts"],"names":["directLine","createDirectLine","directLineOptions","token","window","WebChat","url","domain","conversationId","fetch","method","body","JSON","stringify","userId","Configuration","get","headers","Headers","res","json","console","log","getDirectLine","endDirectLine","end","getWatermark","watermark","addCurrentUser","next","currentUserId","postActivity","from","id","membersAdded","type","subscribe","error","err","complete","removeCurrentUser","membersRemoved","addMembers","members","removeMembers"],"mappings":"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","sourcesContent":["import Configuration from \"./Configuration\"\n\nlet directLine: BotFrameworkWebChat.IDirectLine = null\n\nconst createDirectLine = async (directLineOptions: GSSWebChat.IDirectLineOptions): Promise<BotFrameworkWebChat.IDirectLine> => {\n    if (directLineOptions.token) {\n        directLine = window.WebChat.createDirectLine(directLineOptions)\n    }\n    else {\n        //fetchToken\n        const url = directLineOptions.domain + '/tokens/generate/' + directLineOptions.conversationId\n        const res = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({ userId: Configuration.get().userId }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        const { token } = await res.json()\n\n        directLine = window.WebChat.createDirectLine({ ...directLineOptions, token })\n    }\n\n    console.log('conversationId: ' + directLine.conversationId)\n    console.log('createDirectLine')\n\n    return directLine\n}\n\n\nconst getDirectLine = () => directLine\n\nconst endDirectLine = () => {\n    directLine && directLine.end()\n    directLine = null\n}\n\nconst getWatermark = () => directLine && directLine.watermark || 0\n\n/* post activity */\n//Activity types: https://docs.microsoft.com/zh-tw/azure/bot-service/dotnet/bot-builder-dotnet-activities?view=azure-bot-service-3.0\n\nconst addCurrentUser = (next: Function) => {\n    const currentUserId = Configuration.get().userId\n\n    directLine && directLine.postActivity({\n        from: { id: currentUserId },\n        membersAdded: [{ id: currentUserId }],\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...addCurrentUser: ${err}`),\n        complete: () => console.log('addCurrentUser complete.')\n    })\n}\n\nconst removeCurrentUser = (next: Function) => {\n    const currentUserId = Configuration.get().userId\n\n    directLine && directLine.postActivity({\n        from: { id: currentUserId },\n        membersRemoved: [{ id: currentUserId }],\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...removeMembers: ${err}`),\n        complete: () => console.log('removeMembers complete.')\n    })\n}\n\nconst addMembers = (members: Array<GSSWebChat.IMember>, next: Function) => {\n    directLine && directLine.postActivity({\n        from: { id: Configuration.get().userId },\n        membersAdded: members,\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...addMembers: ${err}`),\n        complete: () => console.log('addMembers complete.')\n    })\n}\n\nconst removeMembers = (members: Array<GSSWebChat.IMember>, next: Function) => {\n    directLine && directLine.postActivity({\n        from: { id: Configuration.get().userId },\n        membersRemoved: members,\n        type: 'conversationUpdate'\n    }).subscribe({\n        next: (id: any) => next && next(id),\n        error: (err: any) => console.log(`Oops...removeMembers: ${err}`),\n        complete: () => console.log('removeMembers complete.')\n    })\n}\n\nexport default {\n    getWatermark,\n    addMembers,\n    removeMembers,\n    addCurrentUser,\n    removeCurrentUser,\n    createDirectLine\n}\n\nexport {\n    createDirectLine,\n    getDirectLine,\n    endDirectLine\n}"],"file":"DirectLine.js"}