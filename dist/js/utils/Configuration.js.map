{"version":3,"sources":["../../../src/utils/Configuration.ts"],"names":["config","initial","rawConfig","directLineOptions","decoded","token","botId","toLowerCase","userId","Storage","getUserId","randomUserID","userName","domain","origin","directLinePath","endsWith","webSocket","checkWebSocketIsOpen","pollingAutoClose","conversationId","getConversationId","watermark","webChatOptions","webChatButtonOptions","buttonOptions","iconUrl","visible","displayOnTheSide","webChatHeaderOptions","headerOptions","styleOptions","Object","assign","bubbleBackground","bubbleBorderColor","bubbleBorderRadius","bubbleBorderStyle","bubbleBorderWidth","bubbleFromUserBackground","bubbleFromUserBorderColor","bubbleFromUserBorderRadius","bubbleFromUserBorderStyle","bubbleFromUserBorderWidth","bubbleFromUserTextColor","botAvatarImage","botAvatarInitials","botName","store","get","Math","random","toString","substr","Promise","resolve","reject","WebSocket","ws","replace","onopen","close","onerror","evt"],"mappings":"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","sourcesContent":["import { createStore } from './Store'\nimport Storage from './Storage'\nimport jwtDecode from 'jwt-decode';\n\nlet config: GSSWebChat.IWebChatConfig\n\nconst initial = async (rawConfig: GSSWebChat.IWebChatConfig): Promise<GSSWebChat.IWebChatConfig> => {\n    config = { ...rawConfig }\n\n    const directLineOptions = config.directLineOptions = { ...config.directLineOptions }\n    const decoded: any = (directLineOptions.token) ? jwtDecode(directLineOptions.token) : {}\n\n    config.botId = (decoded.botId || config.botId).toLowerCase()\n    config.userId = decoded.userId || config.userId || Storage.getUserId() || randomUserID()\n    config.userName = config.userName || ''\n\n    directLineOptions.domain = decoded.origin || directLineOptions.domain\n    const directLinePath = directLineOptions.domain.endsWith('/directline') ? '' : '/directline'\n    directLineOptions.domain += `${directLinePath}/${config.botId}`\n    directLineOptions.webSocket = !(directLineOptions.webSocket === false) && await checkWebSocketIsOpen(directLineOptions.domain)\n    directLineOptions.pollingAutoClose = (directLineOptions.pollingAutoClose === true)\n    directLineOptions.conversationId = decoded.conversationId || directLineOptions.conversationId || Storage.getConversationId() || ''\n    directLineOptions.watermark = 0\n\n    if (!directLineOptions.webSocket && !directLineOptions.pollingAutoClose) {\n        directLineOptions.watermark = -1 //polling watermark 設成 -1 才會先取歷史訊息\n    }\n\n    const webChatOptions = config.webChatOptions = { ...config.webChatOptions } as GSSWebChat.IWebChatOptions\n    const webChatButtonOptions = webChatOptions.buttonOptions = { ...webChatOptions.buttonOptions } as GSSWebChat.IWebChatButtonOptions\n    webChatButtonOptions.iconUrl = webChatButtonOptions.iconUrl || 'https://bot-framework.azureedge.net/bot-icons-v1/bot-framework-default-7.png'\n    webChatButtonOptions.visible = !(webChatButtonOptions.visible === false)\n    webChatButtonOptions.displayOnTheSide = (webChatButtonOptions.displayOnTheSide === true)\n\n    const webChatHeaderOptions = webChatOptions.headerOptions = { ...webChatOptions.headerOptions } as GSSWebChat.IWebChatHeaderOptions\n\n    // default style.\n    const styleOptions = webChatOptions.styleOptions = Object.assign({\n        // Bubble\n        bubbleBackground: '#eceff1',\n        bubbleBorderColor: '#E6E6E6',\n        bubbleBorderRadius: '0px 12px 12px 12px',\n        bubbleBorderStyle: 'solid',\n        bubbleBorderWidth: 1,\n        bubbleFromUserBackground: '#0078d7',\n        bubbleFromUserBorderColor: '#E6E6E6',\n        bubbleFromUserBorderRadius: '12px 0px 12px 12px',\n        bubbleFromUserBorderStyle: 'solid',\n        bubbleFromUserBorderWidth: 1,\n        bubbleFromUserTextColor: '#ffffff',\n\n        // Avatar\n        botAvatarImage: webChatButtonOptions.iconUrl,\n        botAvatarInitials: config.botName\n    }, { ...webChatOptions.styleOptions })\n\n    // createStore.\n    webChatOptions.store = createStore()\n\n    return config\n}\n\nconst get = () => config\n\nconst randomUserID = (): string => `r_${Math.random().toString(36).substr(2, 10)}`\n\n/** 檢查 WebSocket 是否有通 (return true = open) */\nconst checkWebSocketIsOpen = async (domain: string): Promise<boolean> => {\n    return new Promise(function (resolve, reject) {\n        if (!WebSocket) return resolve(false)\n\n        const ws = new WebSocket(domain.replace('http', 'ws'))\n\n        ws.onopen = function () {\n            ws.close()\n            resolve(true)\n        }\n        ws.onerror = function (evt) { resolve(false) }\n    })\n}\n\nexport default {\n    initial,\n    get\n}"],"file":"Configuration.js"}